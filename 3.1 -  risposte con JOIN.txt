1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
    SELECT students.name, students.surname, students.enrolment_date, degrees.name
    FROM students
    INNER JOIN degrees
    ON students.degree_id = degrees.id
    WHERE degrees.name = "Corso di Laurea in Economia";


2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze
    SELECT courses.*, degrees.level, departments.name
    FROM `courses` 
    INNER JOIN `degrees`
    ON courses.degree_id = degrees.id
    INNER JOIN `departments`
    ON departments.id = degrees.department_id
    WHERE departments.name = "Dipartimento di Neuroscienze"
    AND degrees.level = "magistrale";

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
    SELECT courses.*, teachers.name, teachers.surname, teachers.id 
    FROM `courses` 
    INNER JOIN `course_teacher`
    ON courses.id = course_teacher.course_id
    INNER JOIN `teachers`
    ON teachers.id = course_teacher.teacher_id
    WHERE teachers.name = "Fulvio"
    AND teachers.surname="Amato";

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome
    SELECT students.surname, students.name,  students.enrolment_date, degrees.name, degrees.level, departments.name
    FROM `students`
    INNER JOIN degrees
    ON degrees.id = students.degree_id
    INNER JOIN departments
    ON departments.id = degrees.department_id
    ORDER BY students.surname, students.name;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
    SELECT degrees.id, degrees.name, degrees.level, courses.name, teachers.name, teachers.surname 
    FROM `degrees` 
    INNER JOIN courses
    ON courses.degree_id = degrees.id
    INNER JOIN course_teacher
    ON course_teacher.course_id = courses.id
    INNER JOIN teachers
    ON teachers.id = course_teacher.teacher_id

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)
    SELECT  DISTINCT teachers.name, teachers.surname 
    FROM `teachers` 
    INNER JOIN 	course_teacher
    ON teachers.id = course_teacher.teacher_id
    INNER JOIN courses
    ON course_teacher.course_id = courses.id
    INNER JOIN degrees
    ON degrees.id = courses.degree_id
    INNER JOIN departments
    ON departments.id = degrees.department_id
    WHERE departments.name = "Dipartimento di Matematica"

7. BONUS: Selezionare per ogni studente il numero di il tentativi sostenuti per ogni esame, stampando anche il voto massimo. 
    Successivamente, filtrare i tentativi con voto minimo 18.

    SELECT DISTINCT students.name, students.surname, exams.course_id AS esame, COUNT(exam_student.vote) AS tentativi, MAX(exam_student.vote) voto_massimo
    FROM `students` 
    INNER JOIN exam_student
    ON students.id = exam_student.student_id
    INNER JOIN exams
    ON exams.id = exam_student.exam_id
    WHERE exam_student.vote >= 18     //Eliminando where calcolo torna il numero di tutti i tentativi del singolo studente per il singolo esame  
    GROUP BY students.name, students.surname, exams.course_id